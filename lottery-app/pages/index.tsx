import type { NextPage } from "next";
import Head from "next/head";
import { useState, useEffect } from "react";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const [lotto, setLotto] = useState<number[]>([]);
  const [bonus, setBonus] = useState<number>(0);
  const [myNumber, setMyNumber] = useState<number[]>([]);
  const [result, setResult] = useState<number[]>([0, 0, 0, 0, 0, 0]);
  const [moneySpent, setMoneySpent] = useState<number>(0);
  const [auto, setAuto] = useState<NodeJS.Timer>();
  const [speed, setSpeed] = useState<number>(500);

  const generateLotto = (): { lotto: number[]; bonus: number } => {
    const tmp: number[] = [];
    const bonus: number = Math.floor(Math.random() * 45) + 1;

    while (tmp.length < 6) {
      const num = Math.floor(Math.random() * 45) + 1;
      if (num != bonus && !tmp.includes(num)) {
        tmp.push(num);
      }
    }
    return { lotto: tmp, bonus };
  };

  const Assess = ({ check }: { check: number[] }): number | null => {
    let count: number = 0;

    for (let i of check) {
      for (let j of lotto) {
        if (i === j) {
          count++;
        }
      }
    }

    switch (count) {
      case 6:
        return 1;
      case 5:
        if (check.includes(bonus)) {
          return 2;
        } else {
          return 3;
        }
      case 4:
        return 4;
      case 3:
        return 5;
      default:
        return null;
    }
  };

  const buyLotto = (): void => {
    const { lotto } = generateLotto();
    setMyNumber(lotto);
    setMoneySpent((prev) => prev + 1000);
    const check = Assess({ check: lotto });
    let tmp: number[] = result;
    if (check != null) {
      tmp[check - 1]++;
    } else {
      tmp[5]++;
    }
    setResult(tmp);
  };

  const start = (): void => {
    setAuto(setInterval(buyLotto, speed));
  };

  const end = (): void => {
    clearInterval(auto);
  };

  useEffect(() => {
    const { lotto, bonus } = generateLotto();
    setLotto(lotto);
    setBonus(bonus);
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>로또</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.innerContainer}>
        <h1>로또 시뮬레이터</h1>
        <div>
          당첨번호 : {lotto.join(", ")} + {bonus}
        </div>
        <select
          defaultValue={500}
          onChange={(e) => setSpeed(Number(e.currentTarget.value))}
        >
          <option value={1000}>1초</option>
          <option value={500}>0.5초</option>
          <option value={100}>0.1초</option>
          <option value={10}>0.01초</option>
          <option value={5}>0.005초</option>
          <option value={1}>0.001초</option>
          <option value={0.5}>0.0005초</option>
        </select>
        <input type="button" value="시작" onClick={start} />
        <input type="button" value="종료" onClick={end} />
        <div>내 번호 : {myNumber.join(", ")}</div>
        <div>쓴 돈 : ₩ {moneySpent.toLocaleString()}</div>
        <div>시도 : {moneySpent / 1000}</div>
        <ol>
          <li>
            1등 : {result[0]} 확률 :{" "}
            {((result[0] / (moneySpent / 1000)) * 100).toFixed(4)} %
          </li>
          <li>
            2등 : {result[1]} 확률 :{" "}
            {((result[1] / (moneySpent / 1000)) * 100).toFixed(4)} %
          </li>
          <li>
            3등 : {result[2]} 확률 :{" "}
            {((result[2] / (moneySpent / 1000)) * 100).toFixed(4)} %
          </li>
          <li>
            4등 : {result[3]} 확률 :{" "}
            {((result[3] / (moneySpent / 1000)) * 100).toFixed(4)} %
          </li>
          <li>
            5등 : {result[4]} 확률 :{" "}
            {((result[4] / (moneySpent / 1000)) * 100).toFixed(4)} %
          </li>
          <li>
            꽝 : {result[5]} 확률 :{" "}
            {((result[5] / (moneySpent / 1000)) * 100).toFixed(4)} %
          </li>
        </ol>
      </div>
    </div>
  );
};

export default Home;
